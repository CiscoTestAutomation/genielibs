{
  "apply_configuration": {
    "com": {
      "doc": "\n    Apply configuration on the device, either by providing a file and/or\n    straight configuration\n\n    Clean yaml file schema:\n    -----------------------\n    devices:\n      <device>:\n        apply_configuration:\n          configuration: <Configuration block to be applied, 'str'> (Optional)\n          configuration_from_file: <File that contains a configuration to apply, 'str'> (Optional)\n          file: <Configuration file for config replace> (Optional)\n          config_timeout: <Timeout in seconds, 'int'> (Optional)\n          config_stable_time: <Time for configuration stability in seconds, 'int'> (Optional)\n          copy_vdc_all: <To copy on all VDCs or not, 'bool'> (Optional)\n          max_time: <Maximum time section will take for checks in seconds, 'int'> (Optional)\n          check_interval: <Time interval, 'int'> (Optional)\n\n    Example:\n    --------\n    devices:\n      N95_1:\n        apply_configuration:\n          configuration: |\n            interface ethernet2/1\n              no shutdown\n          file: bootflash:/ISSUCleanGolden.cfg\n          config_timeout: 600\n          config_stable_time: 10\n          copy_vdc_all: True\n          max_time: 300\n          check_interval: 20\n\n    Flow:\n    -----\n    before:\n      None\n    after:\n      None\n    ",
      "module_name": "stages.stages",
      "uid": "apply_configuration",
      "url": "https://github.com/CiscoTestAutomation/genielibs/tree/master/pkgs/clean-pkg/src/genie/libs/clean/stages/stages.py#L1158"
    }
  },
  "backup_file_on_device": {
    "com": {
      "doc": "\n    Clean yaml file schema:\n    -----------------------\n    devices:\n      <device>:\n        backup_file_on_device:\n          copy_dir ('str'): Directory containing file to be backed up (Mandatory)\n          copy_file ('str'): File to be backed up (Mandatory)\n          overwrite ('bool'): Overwrite the file if exists. Default value is True (Optional)\n          timeout ('int'): Copy timeout in second. Default value is 300 (Optional)\n\n    Example:\n    --------\n    devices:\n      PE1:\n        backup_file_on_device:\n          copy_dir: bootflash:\n          copy_file: ISSUCleanGolden.cfg\n\n    Flow:\n    -----\n    before:\n      None\n    after:\n      write_erase (Optional, Backup configuration file then perform write erase)\n    ",
      "module_name": "stages.stages",
      "uid": "backup_file_on_device",
      "url": "https://github.com/CiscoTestAutomation/genielibs/tree/master/pkgs/clean-pkg/src/genie/libs/clean/stages/stages.py#L1311"
    }
  },
  "change_boot_variable": {
    "iosxe": {
      "cat9500": {
        "doc": "\n    Clean yaml file schema:\n    -----------------------\n    devices:\n      <device>:\n        change_boot_variable:\n          images ('list'): List of images to copy (Mandatory)\n          timeout ('int'): Execute timeout in seconds\n                           Default 300 (Optional)\n          max_time ('int'): Maximum time to wait while saving running-config\n                            to startup-config in seconds.\n                            Default 300 (Optional)\n          check_interval ('int'): Time interval while checking save running\n                                  config to startup-config completed in seconds.\n                                  Default 30 (Optional)\n          write_memory ('bool'): Execute 'write memory' after setting BOOT var\n                                 Default False (Optional)\n\n    Example:\n    --------\n    devices:\n      N95_1:\n        change_boot_variable:\n          images:\n            - harddisk:/Genie-12351822-iedge-asr-uut\n          timeout: 150\n          max_time: 300\n          check_interval: 20\n\n    Flow:\n    -----\n    before:\n      copy_to_device (Optional, If images to set as boot variable is not already on device)\n    after:\n      write_erase (Optional, user wants to reload with current running configuration or not)\n    ",
        "module_name": "stages.stages",
        "uid": "change_boot_variable",
        "url": "https://github.com/CiscoTestAutomation/genielibs/tree/master/pkgs/clean-pkg/src/genie/libs/clean/stages/iosxe/cat9500/stages.py#L26"
      },
      "cat9k": {
        "doc": "\n    Clean yaml file schema:\n    -----------------------\n    devices:\n      <device>:\n        change_boot_variable:\n          images ('list'): List of images to copy (Mandatory)\n          timeout ('int'): Execute timeout in seconds\n                           Default 300 (Optional)\n          max_time ('int'): Maximum time to wait while saving running-config\n                            to startup-config in seconds.\n                            Default 300 (Optional)\n          check_interval ('int'): Time interval while checking save running\n                                  config to startup-config completed in seconds.\n                                  Default 30 (Optional)\n          write_memory ('bool'): Execute 'write memory' after setting BOOT var\n                                 Default False (Optional)\n\n    Example:\n    --------\n    devices:\n      N95_1:\n        change_boot_variable:\n          images:\n            - harddisk:/Genie-12351822-iedge-asr-uut\n          timeout: 150\n          max_time: 300\n          check_interval: 20\n\n    Flow:\n    -----\n    before:\n      copy_to_device (Optional, If images to set as boot variable is not already on device)\n    after:\n      write_erase (Optional, user wants to reload with current running configuration or not)\n    ",
        "module_name": "stages.stages",
        "uid": "change_boot_variable",
        "url": "https://github.com/CiscoTestAutomation/genielibs/tree/master/pkgs/clean-pkg/src/genie/libs/clean/stages/iosxe/cat9k/stages.py#L26"
      },
      "doc": "\n    Clean yaml file schema:\n    -----------------------\n    devices:\n      <device>:\n        change_boot_variable:\n          images ('list'): List of images to copy (Mandatory)\n          timeout ('int'): Execute timeout in seconds\n                           Default 300 (Optional)\n          max_time ('int'): Maximum time to wait while saving running-config\n                            to startup-config in seconds.\n                            Default 300 (Optional)\n          check_interval ('int'): Time interval while checking save running\n                                  config to startup-config completed in seconds.\n                                  Default 30 (Optional)\n          write_memory ('bool'): Execute 'write memory' after setting BOOT var\n                                 Default False (Optional)\n          config_register ('str'): Value to set config-register for reload\n                                   Default '0x2102' (Optional)\n\n    Example:\n    --------\n    devices:\n      N95_1:\n        change_boot_variable:\n          images:\n            - harddisk:/Genie-12351822-iedge-asr-uut\n          timeout: 150\n          max_time: 300\n          check_interval: 20\n\n    Flow:\n    -----\n    before:\n      copy_to_device (Optional, If images to set as boot variable is not already on device)\n    after:\n      write_erase (Optional, user wants to reload with current running configuration or not)\n    ",
      "module_name": "stages.stages",
      "uid": "change_boot_variable",
      "url": "https://github.com/CiscoTestAutomation/genielibs/tree/master/pkgs/clean-pkg/src/genie/libs/clean/stages/iosxe/stages.py#L34"
    },
    "nxos": {
      "doc": "\n    Clean yaml file schema:\n    -----------------------\n    devices:\n        <device>:\n            change_boot_variable:\n                images:\n                    kickstart: [<kickstart image>] (Optional)\n                    system: [<system image>] (Mandatory)\n                copy_vdc_all: <Copy on all VDCs, 'Boolean'> (Optional)\n                timeout: <Execute timeout in seconds, 'int'> (Optional)\n                max_time: <Maximum time section will take for checks in seconds, 'int'> (Optional)\n                check_interval: <Time interval, 'int'> (Optional)\n                stabilize_time: <Time in seconds till boot variables stabilization, 'int'> (Optional)\n                standby_copy_max_time: <Maximum time section will take for checks in seconds, 'int'> (Optional)\n                standby_copy_check_interval: <Time interval, 'int'> (Optional)\n\n\n    Example:\n    --------\n    devices:\n        N95_1:\n            change_boot_variable:\n                images:\n                    kickstart: bootflash:/kisckstart.gbin\n                    system: bootflash:/system.gbin\n                copy_vdc_all: True\n                timeout: 150\n                max_time: 300\n                check_interval: 20\n                stabilize_time: 100\n                standby_copy_max_time: 100\n                standby_copy_check_interval: 10\n\n    Flow:\n    -----\n    before:\n        copy_to_device (Optional, If images to set as boot variable is not already on device)\n    after:\n        write_erase (Optional, user wants to reload with current running configuration or not)\n    ",
      "module_name": "stages.stages",
      "uid": "change_boot_variable",
      "url": "https://github.com/CiscoTestAutomation/genielibs/tree/master/pkgs/clean-pkg/src/genie/libs/clean/stages/nxos/stages.py#L28"
    }
  },
  "connect": {
    "com": {
      "doc": "\n    Clean yaml file schema:\n    -----------------------\n        devices:\n            <device>:\n                connect:\n    Example:\n    --------\n        devices:\n            N95_1:\n                connect:\n                  timeout: 60\n\n    Flow:\n    -----\n        before:\n            All stages\n        after:\n            N/A\n    ",
      "module_name": "stages.stages",
      "uid": "connect",
      "url": "https://github.com/CiscoTestAutomation/genielibs/tree/master/pkgs/clean-pkg/src/genie/libs/clean/stages/stages.py#L36"
    }
  },
  "copy_to_device": {
    "com": {
      "doc": "\n    Clean yaml file schema:\n    -----------------------\n    devices:\n      <device>:\n        copy_to_device:\n          origin:\n            files ('list'): Image files location on the server (Mandatory)\n            hostname ('str'): Hostname or address of the server (Mandatory)\n          destination:\n            directory ('str'): Location on the device to copy images (Mandatory)\n          protocol ('str'): Protocol used for copy operation (Mandatory)\n          verify_num_images ('bool'): Verify number of images provided by user\n                                      for clean is correct\n                                      Default True (Optional)\n          expected_num_images ('int'): Number of images expected to be provided\n                                       by user for clean\n                                       Default 1 (Optional)\n          vrf ('str'): Vrf name if applicable\n                       Default None (Optional)\n          timeout ('int'): Copy operation timeout in seconds\n                           Default 300 (Optional)\n          compact ('bool'): Compact copy mode if supported by the device\n                            Default False (Optional)\n          protected_files ('list'): File patterns that shouldn't be deleted\n                                    Default None (Optional)\n          overwrite ('bool'): If image file already exists on device,\n                              still copy the file to the device\n                              Default False (Optional)\n          skip_deletion ('bool'): Do not delete any files even if there isn't\n                                  any space on device\n                                  Default False (Optional)\n          copy_attempts ('int'): Number of times to attempt copying image files\n                                 Default 1 (no retry) (Optional)\n          check_file_stability ('bool'): Verify if the files are still being\n                                         copied on the file server\n                                         Default False (Optional)\n          stability_check_tries ('int'): Max number of checks that can be done\n                                         when checking file stability\n                                         Default 3 (Optional)\n          stability_check_delay ('int'): Delay between tries when checking file\n                                         stability in seconds\n                                         Default 2 (Optional)\n          min_free_space_percent ('int') : Minimum acceptable free disk space\n                                           percentage trying to reach by\n                                           deleting unprotected files\n                                           Default None (Optional)\n          use_kstack ('bool'): Use faster version of copy with limited options\n                               Default False (Optional)\n\n    Example:\n    --------\n    devices:\n      ASR1_1:\n        copy_to_device:\n          protocol: sftp\n          origin:\n            hostname: server-1\n            files:\n            - /home/cisco/asr1k.bin\n          timeout: 300\n          destination:\n              directory: harddisk:/\n\n    Flow:\n    -----\n    before:\n      None\n    after:\n      None\n    ",
      "module_name": "stages.stages",
      "uid": "copy_to_device",
      "url": "https://github.com/CiscoTestAutomation/genielibs/tree/master/pkgs/clean-pkg/src/genie/libs/clean/stages/stages.py#L553"
    }
  },
  "copy_to_linux": {
    "com": {
      "doc": "\n    Clean yaml file schema:\n    -----------------------\n        devices:\n            <device>:\n                copy_to_linux:\n                    origin:\n                        files: <File location on remote server or local disk, 'list'> (Mandatory)\n                        hostname: <Hostname or address of the server, if not provided the file will be treated as local. 'str'> (Optional)\n                    destination:\n                        directory: <Location on the file server, 'str'> (Mandatory)\n                        hostname: <Hostname or address of the file server, if not provided the directory will be treated as local.\n                                    This value is optional only when the hostname under origin is also optional. 'str'> (Optional)\n                    protocol: <Protocol used for copy operation, 'str', default sftp> (Optional)\n                    overwrite: <overwrite the file if the same file already exists, 'bool', default False> (Optional)\n                    timeout: <Copy operation timeout in seconds, default 300 'int'> (Optional)\n                    check_image_length: <check if image length exceeds certain limit 'bool', default False> (Optional)\n                    image_length_limit: <custom image length limit, defaults 63, 'int'>  (Optional)\n                    append_hostname: <append device hostname to the end of image while copying 'bool', default False> (Optional)\n                    copy_attempts: <number of times to retry if copy failed, default 1 (no retry) 'int'> (Optional)\n                    check_file_stability: <Verify if the files are still being copied on the file server, 'bool' default False> (Optional)\n                    unique_file_name: <Enable/Disable appending six-digit random number to the end of file name to make it unique, 'bool', default False> (Optional)\n                    unique_number: <User provided six-digit random number to append to the end of file name to make it unique, 'int', default None> (Optional)\n                    rename_images: <User provided new file name. If multiple files exist then we append an incrementing number 'str'> (Optional)\n\n    Example:\n    --------\n        devices:\n            N95_1:\n                copy_to_linux:\n                    protocol: sftp\n                    origin:\n                        hostname: server-1\n                        files:\n                        - /home/cisco/kickstart.bin\n                        - /home/cisco/system.bin\n                    timeout: 300\n                    destination:\n                        hostname: file-server\n                        directory: /auto/tftp-ssr/\n                    copy_attempts: 2\n                    check_file_stability: True\n                    unique_file_name: True\n\n    Flow:\n    -----\n        before:\n            None\n        after:\n            None\n    ",
      "module_name": "stages.stages",
      "uid": "copy_to_linux",
      "url": "https://github.com/CiscoTestAutomation/genielibs/tree/master/pkgs/clean-pkg/src/genie/libs/clean/stages/stages.py#L207"
    }
  },
  "delete_backup_from_device": {
    "com": {
      "doc": "\n    Clean yaml file schema:\n    -----------------------\n    devices:\n      <device>:\n        delete_backup_from_device:\n          delete_dir ('str'): Directory containing file to be deleted (Mandatory)\n          delete_dir_stby ('str'): Directory containing file to be deleted for standby (Optional)\n          delete_file ('str'): File to be deleted up (Mandatory)\n          restore_from_backup ('bool'): Restore the file from backup file.\n                                        Default value is False (Optional)\n          overwrite ('bool'): Overwrite the file if exists. Default value is True (Optional)\n          timeout ('int'): Copy/Execute timeout in second. Default value is 300 (Optional)\n\n    Example:\n    --------\n    devices:\n      PE1:\n        delete_backup_from_device:\n          delete_dir: 'bootflash:'\n          delete_dir_stby: 'bootflash-stby:'\n          delete_file: ISSUCleanGolden.cfg_backup\n\n    Flow:\n    -----\n    before:\n      write_erase (Optional, Perform write erase then delete the backed up file)\n    after:\n      None\n    ",
      "module_name": "stages.stages",
      "uid": "delete_backup_from_device",
      "url": "https://github.com/CiscoTestAutomation/genielibs/tree/master/pkgs/clean-pkg/src/genie/libs/clean/stages/stages.py#L1396"
    }
  },
  "delete_files_from_server": {
    "com": {
      "doc": " delete images from server\n        Clean yaml file schema:\n    -----------------------\n        devices:\n            <device>:\n                delete_files_from_server:\n                  server ('str'): <Hostname or address of the server> (optional)\n                  files ('list'): <list of images to delete> (Optional)\n                  protocol ('str'): <protocol used for deletion, Default value is sftp> (Optional)\n\n    Example:\n    --------\n        devices:\n            N95_1:\n                delete_files_from_server:\n                    server: 1.1.1.1\n                    files:\n                    - /home/cisco/kickstart.bin\n                    protocol: sftp\n\n    Flow:\n    -----\n        before:\n            None\n        after:\n            copy_to_device (optional, delete the image from server to save space after copy is done)\n    ",
      "module_name": "stages.stages",
      "uid": "delete_files_from_server",
      "url": "https://github.com/CiscoTestAutomation/genielibs/tree/master/pkgs/clean-pkg/src/genie/libs/clean/stages/stages.py#L1515"
    }
  },
  "install_image": {
    "iosxe": {
      "doc": "\n    Clean yaml file schema:\n    -----------------------\n    install_image:\n        images: <Image to install `list`> (Mandatory)\n        save_system_config: <Whether or not to save the system config if it was modified `bool`> (Optional) Default: False\n        install_timeout: <Maximum time to wait for install process to finish `int`> (Optional) Default: 500\n        reload_timeout: <Maximum time to wait for reload process to finish `int`> (Optional) Default: 800\n\n    Example:\n    --------\n    install_image:\n        images:\n          - /auto/some-location/that-this/image/stay-isr-image.bin\n        save_system_config: True\n        install_timeout: 1000\n        reload_timeout: 1000\n\n    ",
      "module_name": "stages.stages",
      "uid": "install_image",
      "url": "https://github.com/CiscoTestAutomation/genielibs/tree/master/pkgs/clean-pkg/src/genie/libs/clean/stages/iosxe/stages.py#L410"
    }
  },
  "install_image_and_packages": {
    "iosxr": {
      "doc": "\n    Clean yaml file schema:\n    -----------------------\n    install_image_and_packages:\n        image:\n            - <image to install> (Mandatory)\n        packages:\n            - <package to install> (Optional)\n            - <package to install> (Optional)\n        install_timeout: <timeout used for install operations, 'int', Default 300> (Optional)\n        reload_timeout: <timeout used for device reloads, 'int', Default 900> (Optional)\n\n\n    Example:\n    --------\n    install_image_and_packages:\n        image:\n            - flash:image.iso\n        packages:\n            - flash:package.rpm\n\n    Flow:\n    -----\n        Before:\n            Any\n        After:\n            copy_to_device\n    ",
      "module_name": "stages.stages",
      "uid": "install_image_and_packages",
      "url": "https://github.com/CiscoTestAutomation/genielibs/tree/master/pkgs/clean-pkg/src/genie/libs/clean/stages/iosxr/stages.py#L313"
    }
  },
  "install_packages": {
    "iosxe": {
      "doc": "\n    Clean yaml file schema:\n    -----------------------\n    install_packages:\n        packages: <Packages to install `list`> (Mandatory)\n        save_system_config: <Whether or not to save the system config if it was modified `bool`> (Optional) Default: False\n        install_timeout: <Maximum time to wait for install process to finish `int`> (Optional) Default: 300\n\n    Example:\n    --------\n    install_image:\n        images:\n          - /auto/some-location/that-this/image/stay-isr-image.bin\n        save_system_config: True\n        install_timeout: 1000\n\n    ",
      "module_name": "stages.stages",
      "uid": "install_packages",
      "url": "https://github.com/CiscoTestAutomation/genielibs/tree/master/pkgs/clean-pkg/src/genie/libs/clean/stages/iosxe/stages.py#L547"
    }
  },
  "load_pies": {
    "iosxr": {
      "doc": "\n    Clean yaml file schema:\n    -----------------------\n    devices:\n      <device>:\n        load_pies:\n          files ('list'): List of XR pies to install\n          server('str'): Hostname or IP address of server to use for install command\n                         Default None (testbed YAML reverse lookup for TFTP server)\n          prompt_level('str'): Prompt-level argument for install command\n                               Default 'none' (Optional)\n          synchronous ('bool'): Synchronous option for install command\n                                Default True (Optional)\n          install_timeout ('int'): Maximum time required for install command execution to complete\n                                   Default 600 seconds (Optional)\n          max_time ('int'): Maximum time to wait while checking for pies installed\n                            Default 300 seconds (Optional)\n          check_interval ('int'): Time interval while checking for pies installed\n                                  Default 30 seconds (Optional)\n\n    Example:\n    --------\n    devices:\n      PE1:\n        load_pies:\n          files:\n            - /auto/path/to/image/asr9k-mcast-px.pie-7.3.1.08I\n            - /auto/path/to/image/asr9k-mgbl-px.pie-7.3.1.08I\n            - /auto/path/to/image/asr9k-mpls-px.pie-7.3.1.08I\n          server: 10.1.6.244\n          prompt_level: 'all'\n          synchronous: True\n          timeout: 150\n          max_time: 300\n          check_interval: 20\n\n    Flow:\n    -----\n    before:\n      apply_configuration (Optional, user wants to boot device without PIE or SMU files)\n    after:\n      tftp_boot (Optional, user wants to boot device without PIE or SMU files)\n    ",
      "module_name": "stages.stages",
      "uid": "load_pies",
      "url": "https://github.com/CiscoTestAutomation/genielibs/tree/master/pkgs/clean-pkg/src/genie/libs/clean/stages/iosxr/stages.py#L37"
    }
  },
  "ping_server": {
    "com": {
      "doc": "\n    Clean yaml file schema:\n    -----------------------\n        devices:\n            <device>:\n                ping_server:\n                  server: <Hostname or address of the server to ping `str`> (Mandatory)\n                  vrf: <Vrf used in ping `str`> (Optional)\n                  timeout: <timeout for ping command. Default 60 seconds `int`> (Optional)\n                  min_success_rate: <minimum ping success rate to mark seciton as passed. Default 60 % `int`> (Optional)\n                  max_attempts: <maximum number of attempts to check minimum ping success rate. Default 5 `int`> (Optional)\n                  interval: <time between re-attempts to check minimum ping success rate. Default 30 seconds `int`> (Optional)\n\n    Example:\n    --------\n        devices:\n            N95_1:\n                ping_server:\n                  server: server-1\n                  vrf: management\n                  timeout: 120\n                  min_success_rate: 75\n                  max_attempts: 3\n                  interval: 60\n\n    Flow:\n    -----\n        before:\n            copy_to_device (Optional, checks if server is reachable before trying to copy)\n        after:\n            None\n    ",
      "module_name": "stages.stages",
      "uid": "ping_server",
      "url": "https://github.com/CiscoTestAutomation/genielibs/tree/master/pkgs/clean-pkg/src/genie/libs/clean/stages/stages.py#L92"
    }
  },
  "reload": {
    "com": {
      "doc": "\n    Clean yaml file schema:\n    -----------------------\n    devices:\n      <device>:\n        reload:\n          reload_service_args: (Optional, if not specified defaults below are used)\n            timeout: <reload timeout value, default 800 seconds. 'int'> (Optional)\n            reload_creds: <Credential name defined in the testbed yaml file to be used during reload, default 'default'. 'str'> (Optional)\n            prompt_recovery: <Enable/Disable prompt recovery feature, 'bool'> (Optional)\n            <Key>: <Value> (Any other key:value pairs that the unicon reload service allows for)\n\n          check_modules:\n            check: <Enable/Disable checking of modules after reload, default 'True'. 'bool'> (Optional)>\n            timeout: <timeout value to verify modules are in stable state, default 180 seconds. 'int'> (Optional)\n            interval: <interval value between checks for verifying module status, default 30 seconds. 'int'> (Optional)\n\n\n    Example:\n    --------\n    devices:\n      N95_1:\n        reload:\n          reload_service_args:\n            timeout: 600\n            reload_creds: clean_reload_creds\n            prompt_recovery: True\n            reconnect_sleep: 200 (Unicon NXOS reload service argument)\n\n          check_modules:\n            check: False\n\n\n    Flow:\n    -----\n    before:\n      change_boot_variable (Mandatory)\n      apply_golden_config (Optional, configure device to come up with specific startup configs)\n    after:\n      change_boot_variable (Optional, to verify current boot variable and set next)\n    ",
      "module_name": "stages.stages",
      "uid": "reload",
      "url": "https://github.com/CiscoTestAutomation/genielibs/tree/master/pkgs/clean-pkg/src/genie/libs/clean/stages/stages.py#L1024"
    }
  },
  "tftp_boot": {
    "iosxe": {
      "doc": "\n    Clean yaml file schema:\n    -----------------------\n        tftp_boot:\n            image: <Image to boot with `str`> (Mandatory)\n            ip_address: <Management ip address to configure to reach to the TFTP server `str`> (Mandatory)\n            subnet_mask: <Management subnet mask `str`> (Mandatory)\n            gateway: <Management gateway `str`> (Mandatory)\n            tftp_server: <tftp server is reachable with management interface `str`> (Mandatory)\n            recovery_password: <Enable password for device required after bootup `str`> (Optional, Default None)\n            save_system_config: <Whether or not to save the system config if it was modified `bool`> (Optional) Default: True\n            timeout: <Max time during which TFTP boot must complete `int`> (Optional, Default 600 seconds)\n            config_reg_timeout: <Max time to set config-register `int`> (Optional, Default 30 seconds)\n            device_reload_sleep: <Max time to wait after reloading device with config-register 0x0 `int`> (Optional, Default 20 seconds)\n\n    Example:\n    --------\n    tftp_boot:\n        image:\n          - /auto/some-location/that-this/image/stay-isr-image.bin\n        ip_address: [10.1.7.126, 10.1.7.127]\n        gateway: 10.1.7.1\n        subnet_mask: 255.255.255.0\n        tftp_server: 11.1.7.251\n        recovery_password: nbv_12345\n        save_system_config: False\n        timeout: 600\n        config_reg_timeout: 10\n        device_reload_sleep: 30\n\n    There is more than one ip address, one for each supervisor.\n\n    Flow:\n    -----\n        Before:\n            Any\n        After:\n            Connect\n    ",
      "module_name": "stages.stages",
      "uid": "tftp_boot",
      "url": "https://github.com/CiscoTestAutomation/genielibs/tree/master/pkgs/clean-pkg/src/genie/libs/clean/stages/iosxe/stages.py#L236"
    },
    "iosxr": {
      "doc": "\n    Clean yaml file schema:\n    -----------------------\n        tftp_boot:\n            image: <Image to boot with `str`> (Mandatory)\n            ip_address: <Management ip address to configure to reach to the TFTP server `str`> (Mandatory)\n            subnet_mask: <Management subnet mask `str`> (Mandatory)\n            gateway: <Management gateway `str`> (Mandatory)\n            tftp_server: <tftp server is reachable with management interface `str`> (Mandatory)\n            timeout: <Maximum time during which TFTP boot process must complete `int`> (Optional, Default 600 seconds)\n            config_reg_timeout: <Time to wait after setting config-register `int`> (Optional, Default 30 seconds)\n            device_reload_sleep: <Time to wait after reloading device `int`> (Optional, Default 20 seconds)\n            recovery_username: <Enable username for device required after bootup `str`> (Optional, Default None)\n            recovery_password: <Enable password for device required after bootup `str`> (Optional, Default None)\n\n    Example:\n    --------\n    tftp_boot:\n        image:\n          - /auto/some-location/that-this/image/asr9k-mini-px.vm\n        ip_address: [10.1.7.126, 10.1.7.127]\n        gateway: 10.1.7.1\n        subnet_mask: 255.255.255.0\n        tftp_server: 11.1.7.251\n        timeout: 1200\n        config_reg_timeout: 60\n        device_reload_sleep: 300\n        recovery_username: admin\n        recovery_password: nbv_12345\n\n    Note: There is more than one ip address, one for each supervisor.\n\n    Flow:\n    -----\n        Before:\n            Any\n        After:\n            Connect\n    ",
      "module_name": "stages.stages",
      "uid": "tftp_boot",
      "url": "https://github.com/CiscoTestAutomation/genielibs/tree/master/pkgs/clean-pkg/src/genie/libs/clean/stages/iosxr/stages.py#L148"
    },
    "nxos": {
      "doc": "\n    Clean yaml file schema:\n    -----------------------\n        tftp_boot:\n            image: <Image to boot with `str`> (Mandatory)\n            ip_address: <Management ip address to configure to reach to the TFTP server `str`> (Mandatory)\n            subnet_mask: <Management subnet mask `str`> (Mandatory)\n            gateway: <Management gateway `str`> (Mandatory)\n            tftp_server: <tftp server is reachable with management interface> (Mandatory)\n            timeout: <Maximum time for tftp boot `int`> (Mandatory)\n            reboot_delay: <Maximum time for tftp boot `int`> (Optional)\n            reconnect_delay: <Once device recovered, delay before final reconnect>, 'int'> (Default: 60)\n\n    Example:\n    --------\n    tftp_boot:\n        image:\n          - /auto/some-location/that-this/image/stay-isr-image.bin\n        ip_address: [10.1.7.126, 10.1.7.127]\n        gateway: 10.1.7.1\n        subnet_mask: 255.255.255.0\n        tftp_server: 11.1.7.251\n\n    There is more than one ip address, one for each supervisor.\n\n    Flow:\n    -----\n        Before:\n            Any\n        After:\n            Connect\n    ",
      "module_name": "stages.stages",
      "uid": "tftp_boot",
      "url": "https://github.com/CiscoTestAutomation/genielibs/tree/master/pkgs/clean-pkg/src/genie/libs/clean/stages/nxos/stages.py#L145"
    }
  },
  "tokens": [
    "iosxe",
    "cat9500",
    "cat9k",
    "iosxr",
    "nxos",
    "com"
  ],
  "verify_running_image": {
    "com": {
      "doc": "\n    Clean yaml file schema:\n    -----------------------\n    devices:\n      <device>:\n        verify_running_image:\n          images: <Images reloaded on the device, 'list'> (Mandatory)\n\n    Example:\n    --------\n    devices:\n      N95_1:\n        verify_running_image:\n          images:\n          - test_image.gbin\n\n    Flow:\n    -----\n    before:\n      reload (Mandatory, Reload device first then verify it)\n    after:\n      None\n    ",
      "module_name": "stages.stages",
      "uid": "verify_running_image",
      "url": "https://github.com/CiscoTestAutomation/genielibs/tree/master/pkgs/clean-pkg/src/genie/libs/clean/stages/stages.py#L1262"
    }
  },
  "write_erase": {
    "com": {
      "doc": "\n    Clean yaml file schema:\n    -----------------------\n    devices:\n      <device>:\n        write_erase:\n\n    Example:\n    --------\n    devices:\n      N95_1:\n        write_erase:\n\n    Flow:\n    -----\n    before:\n      backup_file_on_device (Optional, Backup configuration file then perform write erase)\n    after:\n      delete_backup_from_device (Optional, Delete the backed up configuration file)\n      apply_golden_config (Optional, user wants to apply golden config or not)\n    ",
      "module_name": "stages.stages",
      "uid": "write_erase",
      "url": "https://github.com/CiscoTestAutomation/genielibs/tree/master/pkgs/clean-pkg/src/genie/libs/clean/stages/stages.py#L979"
    }
  }
}