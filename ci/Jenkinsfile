def project = 'genielibs'


pipeline {
    agent {
        label 'linux'
    }
    options {
        timeout(time: 30, unit: 'MINUTES')
    }
    stages {
        stage('Clone repos') {
            steps {
                checkout([$class: 'GitSCM', extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'pyats']], userRemoteConfigs: [[credentialsId: 'e8a7354a-c71a-42cb-83ee-49ab5ad40085', url: 'https://wwwin-github.cisco.com/pyATS/pyats.git']]])
                checkout([$class: 'GitSCM', extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'genie']], userRemoteConfigs: [[credentialsId: 'e8a7354a-c71a-42cb-83ee-49ab5ad40085', url: 'https://wwwin-github.cisco.com/pyATS/genie.git']]])
                checkout([$class: 'GitSCM', extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'genieparser']], userRemoteConfigs: [[credentialsId: 'e8a7354a-c71a-42cb-83ee-49ab5ad40085', url: 'https://wwwin-github.cisco.com/pyATS/genieparser.git']]])
                checkout([$class: 'GitSCM', extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'unicon.plugins']], userRemoteConfigs: [[credentialsId: 'e8a7354a-c71a-42cb-83ee-49ab5ad40085', url: 'https://wwwin-github.cisco.com/pyATS/unicon.plugins.git']]])
                checkout([$class: 'GitSCM', extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'yang']], userRemoteConfigs: [[url: 'https://github.com/CiscoTestAutomation/yang.git']]])
                checkout([$class: 'GitSCM', branches: [[name: '*/dev'], [name: '*/main']], extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'genielibs.cisco']], userRemoteConfigs: [[credentialsId: 'e8a7354a-c71a-42cb-83ee-49ab5ad40085', url: 'https://wwwin-github.cisco.com/pyATS/genielibs.cisco.git']]])
                script {
                    sh """
                    ls -l
                    cd ${WORKSPACE}/pyats
                    git remote -v
                    cd ${WORKSPACE}/genie
                    git remote -v
                    cd ${WORKSPACE}/genieparser
                    git remote -v
                    cd ${WORKSPACE}/genielibs.cisco
                    git remote -v
                    cd ${WORKSPACE}/unicon.plugins
                    git remote -v
                    cd ${WORKSPACE}/yang
                    git remote -v
                    """
                }
            }
        }


        stage('Checkout branches') {
            steps {
                script {
                    sh """
                    cd ${WORKSPACE}/pyats
                    # checkout same branch on pyats, if it exists
                    git checkout ${env.CHANGE_BRANCH == null ? env.GIT_BRANCH : env.CHANGE_BRANCH} || git checkout dev
                    git status
                    cd ${WORKSPACE}/genie
                    # checkout same branch on genie, if it exists
                    git checkout ${env.CHANGE_BRANCH == null ? env.GIT_BRANCH : env.CHANGE_BRANCH} || git checkout dev
                    git status
                    cd ${WORKSPACE}/genieparser
                    # checkout same branch on genieparser, if it exists
                    git checkout ${env.CHANGE_BRANCH == null ? env.GIT_BRANCH : env.CHANGE_BRANCH} || git checkout dev
                    git status
                    cd ${WORKSPACE}/genielibs.cisco
                    # checkout same branch on genielibs.cisco, if it exists
                    git checkout ${env.CHANGE_BRANCH == null ? env.GIT_BRANCH : env.CHANGE_BRANCH} || git checkout dev
                    git status
                    cd ${WORKSPACE}/unicon.plugins
                    # checkout same branch on unicon.plugins, if it exists
                    git checkout ${env.CHANGE_BRANCH == null ? env.GIT_BRANCH : env.CHANGE_BRANCH} || git checkout dev
                    git status
                    cd ${WORKSPACE}/yang
                    # checkout same branch on yang, if it exists
                    git checkout ${env.CHANGE_BRANCH == null ? env.GIT_BRANCH : env.CHANGE_BRANCH} || git checkout master
                    git status
                    """
                }
            }
        }


        stage("Build pyATS and make develop") {
            steps {
                sh """
                    env
                    pip list
                    pip freeze
                    export PIP_DOWNLOAD_CACHE=/scratch/pip_download_cache
                    export LC_ALL=C.UTF-8
                    rm -rf /scratch/genielibs-env
                    cd /scratch
                    /usr/bin/python3.6 -m venv genielibs-env
                    . /scratch/genielibs-env/bin/activate
                    pip install --upgrade pip setuptools
                    pip3 install --no-cache-dir wheel pytest pytest-xdist
                    pip3 install --no-cache-dir -i http://pyats-pypi.cisco.com/simple --trusted-host pyats-pypi.cisco.com cisco-distutils ats[full]
                    cd $WORKSPACE/yang/connector
                    make develop
                    cd $WORKSPACE/unicon.plugins
                    make develop
                    cd $WORKSPACE/genie
                    make develop
                    make json
                    cd $WORKSPACE/genieparser
                    make develop
                    make json
                    cd $WORKSPACE/genielibs.cisco
                    make develop
                    make json
                    cd $WORKSPACE/pyats
                    make develop
                    cd $WORKSPACE
                    make develop
                    make json
                    env
                    pip list
                    pip freeze
                """
            }
        }

        stage("Run compileAll") {
            steps {
                sh """
                . /scratch/genielibs-env/bin/activate
                compileAll --path=src
                """
            }
        }
        
        stage("Test changelogs") {
            steps {
                sh"""
                . /scratch/genielibs-env/bin/activate
                make changelogs
                """
            }
        }


        stage("Run runAll") {
            steps {
                sh """
                . /scratch/genielibs-env/bin/activate
                cd tests
                runAll --no-refresh
                """
            }
        }

        stage("Run runAll (without genie.libs.cisco)") {
            steps {
                sh """
                . /scratch/genielibs-env/bin/activate
                cd $WORKSPACE/genie
                pip uninstall -y genie
                make clean
                make devnet
                pip install __build__/dist/genie*
                pip uninstall -y genie.libs.cisco
                cd $WORKSPACE
                cd tests
                runAll --no-refresh
                """
            }
        }

    }
    post {
        cleanup {
            cleanWs()
        }
    }
}
